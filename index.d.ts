/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export declare function generateMnemonic(): string
export interface LogEntry {
  level: 'GOSSIP' | 'TRACE' | 'DEBUG' | 'INFO' | 'WARN' | 'ERROR'
  modulePath: string
  line: number
  message: string
}
export declare function setLogListener(callback: ((log: LogEntry) => void) | null, minLevel?: string): void
export interface MdkNodeOptions {
  network: string
  mdkApiKey: string
  vssUrl: string
  esploraUrl: string
  rgsUrl: string
  mnemonic: string
  lspNodeId: string
  lspAddress: string
}
export interface PaymentMetadata {
  bolt11: string
  paymentHash: string
  expiresAt: number
  scid: string
}
export interface ReceivedPayment {
  paymentHash: string
  amount: number
}
export interface NodeBalance {
  totalOnchainBalanceSats: number
  spendableOnchainBalanceSats: number
  totalAnchorChannelsReserveSats: number
  totalLightningBalanceSats: number
}
export declare class MdkNode {
  constructor(options: MdkNodeOptions)
  getNodeId(): string
  start(): void
  stop(): void
  syncWallets(): void
  getBalance(): NodeBalance
  receivePayment(minThresholdMs: number, quietThresholdMs: number): Array<ReceivedPayment>
  getInvoice(amount: number, description: string, expirySecs: number): PaymentMetadata
  getInvoiceWithScid(
    humanReadableScid: string,
    amount: number,
    description: string,
    expirySecs: number,
  ): PaymentMetadata
  getVariableAmountJitInvoice(description: string, expirySecs: number): PaymentMetadata
  getVariableAmountJitInvoiceWithScid(
    humanReadableScid: string,
    description: string,
    expirySecs: number,
  ): PaymentMetadata
  payBolt12Offer(bolt12OfferString: string): string
}
